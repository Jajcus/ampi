#!/usr/bin/python3

"""Script to build _guitarix_methods.py from jsonrpc_methods.gperf_tmpl (part
of Guitaric sources)."""

import re
import sys

METHOD_RE = re.compile(r'^\"([^"]*)\",\s*(true|false)')

if len(sys.argv) > 1:
    input_f = open(sys.argv[1], "rt")
else:
    input_f = sys.stdin

if len(sys.argv) > 2:
    output_f = open(sys.arg[2], "wt")
else:
    output_f = sys.stdout

print('''
"""
Guitarix JSON-RPC methods

AUTOGENERATED DO NOT EDIT."""

class GuitarixMethods:
    def __init__(self, client):
        self._client = client
'''
)

for line in input_f:
    match = METHOD_RE.match(line)
    if not match:
        continue
    name = match.group(1)
    has_result = match.group(2) == "true"
    print("    def {}(self, *args):".format(name))
    if has_result:
        print("        return self._client.call('{}', *args)".format(name))
    else:
        print("        self._client.notify('{}', *args)".format(name))

input_f.close()
output_f.close()
