#
# This playbook configures the kernel and boot settings
#

- hosts: ampis
  remote_user: root
  tasks:
    - name: Set timezone
      tags: time
      command: timedatectl set-timezone {{ timezone | default("Europe/Warsaw") }}
    - name: Enable persistent journal
      file:
        path: /var/log/journal
        state: directory
        owner: root
        group: systemd-journal
        mode: 2755
      notify: flush journal
    - name: Update APT cache
      tags: apt
      apt:
        update_cache: yes
    - name: Install packages
      tags: apt
      apt:
        name:
          - jackd2
          - dbus-x11
          - i3
          - locales-all
          - nodm
          - xserver-xorg-video-fbdev
          - mesa-utils
          - mesa-utils-extra
          - xserver-xorg-input-evdev
          - guitarix
          - guitarix-lv2
          - rtirq-init
          - x11vnc
          - python3-gi
          - python3-pyudev
          - python3-jack-client
          - python3-pip
          - libgtk-3-0
          - gir1.2-gtk-3.0
          - libgudev-1.0-0
          - gir1.2-gudev-1.0
          - hostapd
          - dnsmasq
          - policykit-1
          - mplayer
          - xinput-calibrator
        state: latest
      notify: "restart user session"
    - name: Uninstall unnecessary packages
      tags: apt
      apt:
        name:
          - fake-hwclock
        state: absent
        purge: yes
    - name: Add 'amp' user
      tags: amp_user
      user:
        name: amp
        shell: /bin/bash
        state: present
        groups: audio
        append: yes
    - name: Set authorized key for user amp copying it from current user
      tags: amp_user
      authorized_key:
        user: amp
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    - name: Configure /etc/defaults
      tags: etc
      template: src=etc/default/{{ item }} dest=/etc/default/{{ item }}
      with_items:
        - rtirq
        - nodm
        - locale
    - name: Configure sound drivers
      tags: etc
      template: src=etc/modprobe.d/snd.conf dest=/etc/modprobe.d/snd.conf
      notify:
        - reload snd
    - name: Install scripts
      tags: scripts,hostapd
      copy:
        src: "{{ playbook_dir }}/../scripts/{{ item }}"
        dest: /usr/local/bin/{{ item }}
        mode: 0755
      with_items:
        - bind_eth
        - unbind_eth
        - hostapd_pre
    - name: Install the Ampi App
      tags: app
      synchronize:
        src: "{{ playbook_dir }}/../ampi_app/"
        dest: /home/amp/ampi_app/
        archive: no
        recursive: yes
        links: yes
        perms: yes
        times: yes
        rsync_opts:
          - "--exclude=*~"
          - "--exclude=__pycache__"
          - "--exclude=*.pyc"
          - "--exclude=.*"
      notify: "restart user session"
    - name: Make directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /etc/systemd/system/dnsmasq.service.d
        - /etc/systemd/system/systemd-journald.service.d
    - name: Add custom systemd services
      tags: etc, systemd, hostapd
      template:
        src: etc/systemd/system/{{ item }}
        dest: /etc/systemd/system/{{ item }}
      with_items:
        - unbind-eth.service
        - set-governor.service
        - hostapd.service
        - ifup-wlan0.service
        - ifup-wlan0.timer
        - dnsmasq.service.d/partof_hostapd.conf
        - systemd-journald.service.d/wait_for_rtc.conf
    - name: Set up udev rules
      tags: etc
      template:
        src: etc/udev/rules.d/{{ item }}
        dest: /etc/udev/rules.d/{{ item }}
      with_items:
        - 01-rtc.rules
    - name: Reload systemd config
      tags: systemd
      systemd: daemon_reload=yes
    - name: Disable/stop uneeded services
      tags: systemd
      systemd: enabled=no state=stopped name={{ item }}
      with_items:
        - dhcpcd
        - ModemManager
        - bluetooth
        - hciuart
        - raspi-config
        - triggerhappy
        - rsyslog
    - name: Configure hostapd
      tags: etc, hostapd
      template:
        src: "{{ item }}"
        dest: "/{{ item }}"
      with_items:
        - etc/hostapd/hostapd.conf
        - etc/network/interfaces.d/uap0
        - etc/hosts
        - etc/dnsmasq.conf
      notify: "restart hostapd"
    - name: Set resource limits for real-time
      tags: etc
      template: src=etc/security/limits.d/audio.conf dest=/etc/security/limits.d/audio.conf
      notify: "restart user session"
    - name: Enable required services
      tags: systemd, hostapd
      systemd: enabled=yes name={{ item }}
      with_items:
        - unbind-eth.service
        - set-governor.service
        - hostapd.service
    - name: Start required services
      tags: systemd
      systemd: state=started name={{ item }}
      with_items:
        - set-governor.service
    - name: make amp directories
      tags: amp_user,i3,vnc,guitarix
      file:
        name: "{{ item }}"
        owner: amp
        group: amp
        state: directory
      with_items:
        - /home/amp/.config
        - /home/amp/.config/ampi_app
        - /home/amp/.config/guitarix
        - /home/amp/.config/guitarix/banks
        - /home/amp/.config/i3
        - /home/amp/.config/i3status
        - /home/amp/.vnc
    - name: configure i3
      tags: amp_user,i3
      template: src=amp/i3/config dest=/home/amp/.config/i3/config owner=amp group=amp
      notify: "restart user session"
    - name: configure i3status
      tags: amp_user,i3
      template: src=amp/i3status/config dest=/home/amp/.config/i3status/config owner=amp group=amp
      notify: "restart user session"
    - name: configure x11vnc
      tags: amp_user,vnc
      template:
        src: amp/x11vncrc
        dest: /home/amp/.x11vncrc
        owner: amp
        group: amp
    - name: set x11vnc password
      tags: amp_user,vnc
      become: yes
      become_user: amp
      command: x11vnc -storepasswd ampik ~/.vnc/passwd
    - name: configure guitarix
      tags: amp_user,guitarix
      template:
        src: amp/guitarix/{{ item }}
        dest: /home/amp/.config/guitarix/{{ item }}
      with_items:
        - banks/Ampi.gx
        - banks/banklist.js
      notify: "restart user session"

  handlers:
    - name: reload snd
      shell: "modprobe -r snd-usb-audio ; modprobe snd-usb-audio || :"
    - name: stop X11 session
      systemd: name=nodm.service state=stopped
      listen: "restart user session"
    - name: killa jackd
      shell: "killall -9 jackd || :"
      listen: "restart user session"
    - name: start X11 session
      systemd: name=nodm.service state=started
      listen: "restart user session"
    - name: restart hostapd
      systemd: name=hostapd.service state=restarted
    - name: flush journal
      systemd: name=systemd-journal-flush.service state=started

# vi: sw=2 sts=2 et filetype=yaml
